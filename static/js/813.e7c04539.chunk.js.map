{"version":3,"file":"static/js/813.e7c04539.chunk.js","mappings":"6OAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,I,MAGaC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAJT,qCAGmB,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qD,4CCNnBC,EAAOC,EAAAA,GAAAA,GAAH,kDAIJC,EAAOD,EAAAA,GAAAA,GAAH,yFAMJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2G,SCMrB,EAhBiB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAI,OACb,SAACP,EAAD,WACE,SAACC,EAAD,CAAUO,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAKK,SAFCL,EAAKE,GADH,KASpB,ECiCD,EA5Ca,WACX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEMC,GAAYC,EAAAA,EAAAA,UA8BlB,OA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACbH,EAAUI,SACZJ,EAAUI,QAAQC,QAGpBL,EAAUI,QAAU,IAAIE,gBALP,SAQfP,GAAW,GARI,SAUYtB,EAAoB,CAC7CuB,UAAWA,EAAUI,UAXR,OAUTG,EAVS,OAcfV,EAASU,GAdM,kDAgBI,iBAAf,KAAMC,MACRC,QAAQC,IAAI,KAAMC,SAjBL,yBAoBfZ,GAAW,GApBI,6EAAH,qDAwBhBI,GACD,GAAE,KAGD,6BACE,wBAAI,0BACJ,SAAC,EAAD,CAAUjB,MAAOA,IAEhBY,IAAW,SAACc,EAAA,EAAD,MAGjB,C","sources":["services/api.js","components/FilmListComponent/FilmList.styled.jsx","components/FilmListComponent/FilmList.jsx","components/pages/Homepage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// Base URL\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// API-key\nconst API_KEY = 'ed30d82e5e7e2bb8ef0712ec8219f600';\n\n// fetch function\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink } from './FilmList.styled';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <FilmLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect, useRef } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\n\nimport { Loader } from 'components/LoaderComponent/Loader';\nimport FilmList from 'components/FilmListComponent/FilmList';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setLoading(true);\n\n        const fetchedFilms = await fetchTrendingMovies({\n          abortCtrl: abortCtrl.current,\n        });\n\n        setFilms(fetchedFilms);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          console.log(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>TRENDING FILMS TODAY</h1>\n      <FilmList films={films} />\n\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["axios","fetchTrendingMovies","response","data","results","List","styled","Item","FilmLink","Link","films","location","useLocation","map","film","to","id","state","from","title","useState","setFilms","loading","setLoading","abortCtrl","useRef","useEffect","fetchFilms","current","abort","AbortController","fetchedFilms","code","console","log","message","Loader"],"sourceRoot":""}