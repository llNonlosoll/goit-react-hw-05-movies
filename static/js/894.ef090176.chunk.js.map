{"version":3,"file":"static/js/894.ef090176.chunk.js","mappings":"mNAGaA,EAAOC,EAAAA,GAAAA,GAAH,kDAIJC,EAAOD,EAAAA,GAAAA,GAAH,yFAMJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2G,SCMrB,EAhBiB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACR,EAAD,WACE,SAACC,EAAD,CAAUQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA9C,SACGI,KAFMD,EADD,KASjB,C,kHC2BD,UArCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAW,GAFS,UAIOG,EAAAA,EAAAA,MAJP,OAIdC,EAJc,OAMpBR,EAAUQ,GANU,gDAQD,iBAAf,KAAMC,MACRP,EAAS,KAAMQ,SATG,yBAYpBN,GAAW,GAZS,4EAAH,qDAgBrBE,GACD,GAAE,KAGD,6BACE,wBAAI,0BACJ,SAAC,IAAD,CAAUhB,OAAQA,IAEjBW,IAAUE,IAAW,yBAAG,UAAQF,KAEhCE,IAAW,SAAC,IAAD,MAGjB,C,sICvCKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKP,SAAeT,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBI,EAASM,IAAT,uBAFpB,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,2HASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaC,GAAxC,kGAEoBX,EAASM,IAAT,8BAAoCI,GAAe,CACxEC,OAAAA,IAHC,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,2HAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,kGAEoBiB,EAASM,IAAT,iBAAuBvB,IAF3C,uBAEKwB,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,2H","sources":["components/FilmListComponent/FilmList.styled.jsx","components/FilmListComponent/FilmList.jsx","components/pages/Homepage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink } from './FilmList.styled';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect } from 'react';\n\nimport { Loader } from 'components/LoaderComponent/Loader';\n\nimport { fetchTrendingMovies } from 'services/api';\nimport FilmList from 'components/FilmListComponent/FilmList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      try {\n        setLoading(true);\n\n        const fetchedFilms = await fetchTrendingMovies();\n\n        setMovies(fetchedFilms);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesList();\n  }, []);\n\n  return (\n    <main>\n      <h1>TRENDING FILMS TODAY</h1>\n      <FilmList movies={movies} />\n\n      {error && !loading && <p>Error: {error}</p>}\n\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// Base request params\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'efb2c1c3ed4f12e7da1417e145c2656a',\n    language: 'en-US',\n  },\n});\n\n// fetch functions\nexport async function fetchTrendingMovies() {\n  try {\n    const { data } = await instance.get(`/trending/movie/day`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, signal) {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${queryString}`, {\n      signal,\n    });\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["List","styled","Item","FilmLink","Link","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMoviesList","fetchTrendingMovies","fetchedFilms","code","message","instance","axios","baseURL","params","api_key","language","get","data","results","searchMovie","queryString","signal","getMovieById"],"sourceRoot":""}