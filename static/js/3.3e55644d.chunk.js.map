{"version":3,"file":"static/js/3.3e55644d.chunk.js","mappings":"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","sources":["components/FilmListComponent/FilmList.styled.jsx","components/FilmListComponent/FilmList.jsx","components/pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: blue;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink } from './FilmList.styled';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Loader } from 'components/LoaderComponent/Loader';\n\nimport { searchMovie } from 'services/api';\nimport FilmList from 'components/FilmListComponent/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Параметри рядка запиту\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Значення 'query' з рядка запиту\n  const searchQuery = searchParams.get('query');\n\n  // Значення з інпуту або з рядка запиту\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setLoading(true);\n\n        const fetchedSearchedMovies = await searchMovie(\n          searchQuery,\n          abortCtrl.current.signal\n        );\n\n        setMovies(fetchedSearchedMovies);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (searchQuery) {\n      fetchMovies();\n    }\n  }, [searchQuery]);\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <div>\n        {' '}\n        <h2>Search Movies:</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            value={query}\n            onChange={handleChange}\n            name=\"searchQuery\"\n            type=\"text\"\n            placeholder=\"Type here the movie title\"\n          />\n          <button type=\"submit\">Search movie</button>\n        </form>\n      </div>\n\n      {loading && <Loader />}\n      {error && !loading && <p>Error: {error}</p>}\n\n      {movies.length !== 0 && <FilmList movies={movies} />}\n\n      {!error && !searchQuery && movies.length === 0 && (\n        <p>Please enter movie title</p>\n      )}\n\n      {!error && !loading && searchQuery && movies.length === 0 && (\n        <p>No movies found with this title</p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n// Base request params\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'efb2c1c3ed4f12e7da1417e145c2656a',\n    language: 'en-US',\n  },\n});\n\n// fetch functions\nexport async function fetchTrendingMovies() {\n  try {\n    const { data } = await instance.get(`/trending/movie/day`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, signal) {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${queryString}`, {\n      signal,\n    });\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["List","styled","Item","FilmLink","Link","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","setQuery","abortCtrl","useRef","useEffect","fetchMovies","current","abort","AbortController","searchMovie","signal","fetchedSearchedMovies","code","message","onSubmit","event","preventDefault","value","onChange","target","name","type","placeholder","length","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","data","results","queryString","getMovieById","getCast","cast"],"sourceRoot":""}