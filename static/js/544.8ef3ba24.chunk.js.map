{"version":3,"file":"static/js/544.8ef3ba24.chunk.js","mappings":"iSAGaA,EAAQC,EAAAA,GAAAA,GAAH,+CAILC,EAAOD,EAAAA,GAAAA,GAAH,kDAIJE,EAAOF,EAAAA,GAAAA,GAAH,yFAMJG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,8G,SCKrB,EAnBiB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,SAACR,EAAD,UAAO,0BACP,SAACE,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACR,EAAD,WACE,SAACC,EAAD,CAAUQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA9C,SACGI,KAFMD,EADD,QAUnB,EC0BD,EAvCa,WAEX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAwBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAW,GAFS,UAIOG,EAAAA,EAAAA,MAJP,OAIdC,EAJc,OAMpBR,EAAUQ,GANU,gDAQD,iBAAf,KAAMC,MACRP,EAAS,KAAMQ,SATG,yBAYpBN,GAAW,GAZS,4EAAH,qDAgBrBE,GACD,GAAE,KAID,4BACGH,IAAW,SAACQ,EAAA,EAAD,IAEXV,IAAUE,IAAW,yBAAG,UAAQF,MAEjC,SAAC,EAAD,CAAUX,OAAQA,MAGvB,C,sLCzCKsB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKP,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBK,EAASM,IAAT,uBAFpB,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,2HASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaC,GAAxC,kGAEoBX,EAASM,IAAT,8BAAoCI,GAAe,CACxEC,OAAAA,IAHC,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,2HAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,kGAEoBkB,EAASM,IAAT,iBAAuBxB,IAF3C,uBAEKyB,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,2HASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAuB/B,GAAvB,kGAEoBkB,EAASM,IAAT,iBAAuBxB,EAAvB,aAFpB,uBAEKyB,EAFL,EAEKA,KAFL,kBAGIA,EAAKO,MAHT,2HASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BjC,GAA1B,kGAEoBkB,EAASM,IAAT,iBAAuBxB,EAAvB,aAFpB,uBAEKyB,EAFL,EAEKA,KAFL,kBAGIA,EAAKC,SAHT,2H","sources":["components/FilmListComponent/FilmList.styled.jsx","components/FilmListComponent/FilmList.jsx","components/pages/Homepage.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const FilmLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n\n  &:hover {\n    color: #ffff62;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink, Title } from './FilmList.styled';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Title>TRENDING FILMS TODAY</Title>\n      <List>\n        {movies.map(({ id, title }) => (\n          <Item key={id}>\n            <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </FilmLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect } from 'react';\n\nimport { Loader } from 'components/LoaderComponent/Loader';\n\nimport { fetchTrendingMovies } from 'services/api';\nimport FilmList from 'components/FilmListComponent/FilmList';\n\nconst Home = () => {\n  //States\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // fetch request on first render\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      try {\n        setLoading(true);\n\n        const fetchedFilms = await fetchTrendingMovies();\n\n        setMovies(fetchedFilms);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesList();\n  }, []);\n\n  //Render\n  return (\n    <main>\n      {loading && <Loader />}\n\n      {error && !loading && <p>Error: {error}</p>}\n\n      <FilmList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// Base request params\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'efb2c1c3ed4f12e7da1417e145c2656a',\n    language: 'en-US',\n  },\n});\n\n// fetch functions\nexport async function fetchTrendingMovies() {\n  try {\n    const { data } = await instance.get(`/trending/movie/day`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, signal) {\n  try {\n    const { data } = await instance.get(`/search/movie?query=${queryString}`, {\n      signal,\n    });\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["Title","styled","List","Item","FilmLink","Link","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMoviesList","fetchTrendingMovies","fetchedFilms","code","message","Loader","instance","axios","baseURL","params","api_key","language","get","data","results","searchMovie","queryString","signal","getMovieById","getCast","cast","getReviews"],"sourceRoot":""}